sudo: false
language: rust

matrix:
  include:
    # Minimum supported Rust
    - rust: 1.20.0
      env: FEATURES=""
    - rust: 1.20.0
      env: FEATURES="extprim"

    # Minimum Rust that works with the `version_numbers` test
    # Specifically, at the time of commiting these changes `version-sync` 0.5.0 depends on `url`
    # 1.7.0 which depends on `unicode-normalization` 0.1.6 which uses rvalue static promotion from
    # Rust 1.21. Let's not run the `version_numbers` test under Rust 1.17!
    - rust: 1.21.0
      env: FEATURES="version-sync"

    - rust: stable
      env: FEATURES="version-sync"
    - rust: stable
      env: FEATURES="extprim,version-sync"

    - rust: beta
      env: FEATURES="version-sync"
    - rust: beta
      env: FEATURES="extprim,version-sync"

    - rust: nightly
      env: FEATURES="test-nightly-regressions,version-sync"
    - rust: nightly
      env: FEATURES="extprim,test-nightly-regressions,version-sync"

    # Run QuickCheck only on limited amount of configurations - we don't need more
    - rust: stable
      env: FEATURES="extprim,quickcheck"
    - rust: nightly
      env: FEATURES="extprim,quickcheck,test-nightly-regressions"

    # Host documentation on <https://hcpl.github.com/serde_mtproto>
    - rust: nightly
      env: DOC_UPLOAD  # Just a marker visible from Travis logs
      install:
        - cargo install cargo-update || echo "cargo-update already installed"
        - cargo install cargo-travis || echo "cargo-travis already installed"
        - cargo install-update cargo-travis
      script:
        - cargo doc --manifest-path Cargo.toml --features extprim,quickcheck
        - cargo doc --manifest-path serde_mtproto_derive/Cargo.toml
        - git clone --depth=1 --branch gh-pages "https://github.com/${TRAVIS_REPO_SLUG}" target/gh-pages
        - |
          if [ -e "target/gh-pages/${TRAVIS_BRANCH}/index.html" ]; then
              rm -f target/doc/index.html
          else
              echo '<!DOCTYPE html>' > target/doc/index.html
              echo '<meta http-equiv="refresh" content="0; url=serde_mtproto/">' >> target/doc/index.html
              echo '<a href="serde_mtproto/">Redirect</a>' >> target/doc/index.html
          fi
        - rm -rf target/gh-pages
      after_success:
        - cargo doc-upload --message $'Automatic Travis documentation build\n\n'"${TRAVIS_COMMIT_MESSAGE}"

cache: cargo

env:
  global:
    - RUST_BACKTRACE=1

install:
  - |
    if [ "${TRAVIS_RUST_VERSION}" = nightly ]; then
        # Now that `clippy` is packaged with nightlies, it won't fall out of
        # sync with build failure
        rustup component add clippy-preview
    fi

script:
  - |
    cargo build --verbose --all --lib --features "${FEATURES}" &&
    cargo test --verbose --all --lib --features "${FEATURES}"
  - |
    cargo build --verbose --all --tests --features "${FEATURES}" &&
    cargo test --verbose --all --tests --features "${FEATURES}"
  - |
    if [ "${TRAVIS_RUST_VERSION}" = nightly ]; then
        cargo build --verbose --all --benches --features "${FEATURES}" &&
        cargo test --verbose --all --benches --features "${FEATURES}" &&

        cargo clippy --verbose --all --features "${FEATURES}"
    fi

after_success:
  - |
    # Run benchmarks against master and PR branch
    # Adapted from <https://beachape.com/blog/2016/11/02/rust-performance-testing-on-travis-ci/>
    if [ "${TRAVIS_PULL_REQUEST}" = true ] && [ "${TRAVIS_RUST_VERSION}" = nightly ]; then
        cd "${TRAVIS_BUILD_DIR}"/.. &&
        git clone "${REMOTE_URL}" "${TRAVIS_REPO_SLUG}-bench" &&
        cd "${TRAVIS_REPO_SLUG}-bench" &&
        # Bench master
        git checkout master &&
        cargo bench > before &&
        # Bench PR'ing branch
        git checkout "${TRAVIS_COMMIT}" &&
        cargo bench > after &&
        # Compare results
        cargo install --force cargo-benchcmp &&
        cargo benchcmp --include-missing before after
    fi
